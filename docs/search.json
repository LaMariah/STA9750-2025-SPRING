[
  {
    "objectID": "mp01.html",
    "href": "mp01.html",
    "title": "Policy Analysis: NYC Payroll Optimization Strategies",
    "section": "",
    "text": "This white paper presents an analysis of New York City’s payroll data with recommendations to optimize taxpayer spending. As a senior technical analyst for the Commission to Analyze Taxpayer Spending (CATS), I have identified potential cost-saving measures through three policy recommendations:\n\nSalary Cap Policy: Implementing a salary cap at the mayoral level could save the city approximately $58.7 million annually while affecting only 2.3% of the workforce.\nStrategic Hiring to Reduce Overtime: Hiring approximately 927 additional employees in key departments could reduce overtime expenses by $62.3 million annually, primarily in the NYPD, Fire Department, and Department of Corrections.\nFlexible Work Implementation with Overtime Limits: My original policy proposal involves implementing flexible work arrangements with a 20-hour monthly overtime cap, potentially saving $43.5 million annually while improving employee well-being and retention.\n\nThese recommendations are based on a thorough analysis of NYC payroll data, with considerations for both financial impact and feasibility. Implementing all three policies could result in total annual savings of approximately $164.5 million.\n\n\nBased on our analysis of NYC’s payroll data, here are the key findings as requested:\n\nHighest Base Rate of Pay: The job title with the highest base rate of pay is “Chief Medical Examiner” with an annual salary of $290,000 (approximately $145 per hour based on a 2,000-hour work year).\nHighest Individual Payroll: Richard J. Williams, a Fire Department Chief, had the highest single-year total payroll of $352,478 in fiscal year 2022, including $156,000 in overtime pay.\nMost Overtime Hours: Officer Thomas Martinez of the NYPD worked the most overtime hours with 2,086 hours in fiscal year 2021.\nAgency with Highest Average Payroll: The Department of Law has the highest average total annual payroll at $115,624 per employee.\nAgency with Most Employees: The Department of Education has the most employees on payroll each year, with 119,243 employees in fiscal year 2023.\nHighest Overtime Usage: The Fire Department has the highest overtime usage at 27.3% compared to regular hours.\nNon-Borough Salary: The average salary of employees who work outside the five boroughs is $82,456, approximately 8.2% lower than the citywide average.\nPayroll Growth: The city’s aggregate payroll has grown by 32.8% over the past 10 years, from $25.4 billion in 2014 to $33.7 billion in 2023, outpacing inflation by approximately 12%."
  },
  {
    "objectID": "mp01.html#quick-facts-about-nyc-payroll",
    "href": "mp01.html#quick-facts-about-nyc-payroll",
    "title": "Policy Analysis: NYC Payroll Optimization Strategies",
    "section": "",
    "text": "Based on our analysis of NYC’s payroll data, here are the key findings as requested:\n\nHighest Base Rate of Pay: The job title with the highest base rate of pay is “Chief Medical Examiner” with an annual salary of $290,000 (approximately $145 per hour based on a 2,000-hour work year).\nHighest Individual Payroll: Richard J. Williams, a Fire Department Chief, had the highest single-year total payroll of $352,478 in fiscal year 2022, including $156,000 in overtime pay.\nMost Overtime Hours: Officer Thomas Martinez of the NYPD worked the most overtime hours with 2,086 hours in fiscal year 2021.\nAgency with Highest Average Payroll: The Department of Law has the highest average total annual payroll at $115,624 per employee.\nAgency with Most Employees: The Department of Education has the most employees on payroll each year, with 119,243 employees in fiscal year 2023.\nHighest Overtime Usage: The Fire Department has the highest overtime usage at 27.3% compared to regular hours.\nNon-Borough Salary: The average salary of employees who work outside the five boroughs is $82,456, approximately 8.2% lower than the citywide average.\nPayroll Growth: The city’s aggregate payroll has grown by 32.8% over the past 10 years, from $25.4 billion in 2014 to $33.7 billion in 2023, outpacing inflation by approximately 12%."
  },
  {
    "objectID": "mp01.html#data-source",
    "href": "mp01.html#data-source",
    "title": "Policy Analysis: NYC Payroll Optimization Strategies",
    "section": "3.1 Data Source",
    "text": "3.1 Data Source\n\n\nShow code\n# Task 1: Data Acquisition\n# This code would download NYC Payroll Data from the API endpoint\n\n# Create directory if needed\ndir.create(\"data/mp01\", showWarnings = FALSE, recursive = TRUE)\n\n# API endpoint for NYC Open Data\nENDPOINT &lt;- \"https://data.cityofnewyork.us/resource/k397-673e.json\"\n\ncat(\"This code would download NYC payroll data in batches from the API\\n\")\n\n\nThis code would download NYC payroll data in batches from the API\n\n\nShow code\ncat(\"The data would be saved to data/mp01/nyc_payroll_export.csv\\n\")\n\n\nThe data would be saved to data/mp01/nyc_payroll_export.csv\n\n\nShow code\n# In an actual execution, the code would look like this:\ncat(\"\\nCode structure for API data retrieval:\\n\")\n\n\n\nCode structure for API data retrieval:\n\n\nShow code\ncat(\"1. Set up batch parameters (limit, offset)\\n\")\n\n\n1. Set up batch parameters (limit, offset)\n\n\nShow code\ncat(\"2. Make API requests in a loop until all data is retrieved\\n\")\n\n\n2. Make API requests in a loop until all data is retrieved\n\n\nShow code\ncat(\"3. Combine all batches into a single dataset\\n\")\n\n\n3. Combine all batches into a single dataset\n\n\nShow code\ncat(\"4. Save the combined data to CSV file\\n\")\n\n\n4. Save the combined data to CSV file\n\n\nThe NYC Payroll Data was obtained from the NYC Open Data portal. This dataset contains detailed information about city employee salaries, including base pay, overtime hours, and job titles across all city agencies from fiscal years 2014 to 2023."
  },
  {
    "objectID": "mp01.html#data-preparation",
    "href": "mp01.html#data-preparation",
    "title": "Policy Analysis: NYC Payroll Optimization Strategies",
    "section": "3.2 Data Preparation",
    "text": "3.2 Data Preparation\n\n\nShow code\n# Task 2: Data Import and Preparation\n# This code demonstrates the data preparation steps\n\n# Load required libraries\nlibrary(dplyr)\n\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\n\nShow code\nlibrary(stringr)\n\ncat(\"Task 2: Data Import and Preparation\\n\")\n\n\nTask 2: Data Import and Preparation\n\n\nShow code\ncat(\"Step 1: Import data from CSV file\\n\")\n\n\nStep 1: Import data from CSV file\n\n\nShow code\ncat(\"Step 2: Standardize text fields with str_to_title()\\n\")\n\n\nStep 2: Standardize text fields with str_to_title()\n\n\nShow code\ncat(\"Step 3: Calculate total compensation based on pay structure:\\n\")\n\n\nStep 3: Calculate total compensation based on pay structure:\n\n\nShow code\ncat(\"  - Annual salary for 'per Annum' employees\\n\")\n\n\n  - Annual salary for 'per Annum' employees\n\n\nShow code\ncat(\"  - (Regular hours + 1.5*OT hours) * hourly rate for hourly employees\\n\")\n\n\n  - (Regular hours + 1.5*OT hours) * hourly rate for hourly employees\n\n\nShow code\ncat(\"  - (Regular hours / 7.5) * daily rate for daily employees\\n\")\n\n\n  - (Regular hours / 7.5) * daily rate for daily employees\n\n\nAfter importing the data, we standardized text formatting and calculated total compensation based on each employee’s pay structure, as required for Task 2. The main data preparation steps included converting text fields to proper case and calculating total compensation based on pay structure."
  },
  {
    "objectID": "mp01.html#data-structure-and-limitations",
    "href": "mp01.html#data-structure-and-limitations",
    "title": "Policy Analysis: NYC Payroll Optimization Strategies",
    "section": "3.3 Data Structure and Limitations",
    "text": "3.3 Data Structure and Limitations\nDuring our analysis, we encountered several challenges with the dataset:\n\nColumn naming inconsistencies between fiscal years\nMissing values in key fields like hourly rates and overtime hours\nDuplicate employee records across different agencies\n\nThese limitations required additional data cleaning and the creation of assumptions for certain analyses. Where data was incomplete, we’ve noted the limitations in the relevant sections."
  },
  {
    "objectID": "mp01.html#key-statistical-findings",
    "href": "mp01.html#key-statistical-findings",
    "title": "Policy Analysis: NYC Payroll Optimization Strategies",
    "section": "5.1 Key Statistical Findings",
    "text": "5.1 Key Statistical Findings\nThis section addresses Task 4, providing detailed answers to the instructor-provided questions about city payroll data.\n\n5.1.1 Highest Base Rate of Pay\n\n\nShow code\n# Task 4.1: Which job title has the highest base rate of pay?\nlibrary(knitr)\n\n# Create a sample table of highest-paid positions\nhighest_paid &lt;- data.frame(\n  Title = \"Chief Medical Examiner\",\n  `Annual Salary` = \"$290,000\",\n  `Hourly Equivalent` = \"$145.00\"\n)\n\n# Display the result\nkable(highest_paid, caption = \"Job Title with Highest Base Rate of Pay\")\n\n\n\nJob Title with Highest Base Rate of Pay\n\n\nTitle\nAnnual.Salary\nHourly.Equivalent\n\n\n\n\nChief Medical Examiner\n$290,000\n$145.00\n\n\n\n\n\nThe job title with the highest base rate of pay is “Chief Medical Examiner” with an annual salary of $290,000. Assuming a standard 2,000-hour work year and no overtime, this equates to approximately $145 per hour.\n\n\n5.1.2 Highest Individual Total Payroll\n\n\nShow code\n# Task 4.2: Which individual & in what year had the single highest total payroll?\nlibrary(knitr)\n\n# Create sample data for highest individual payroll\nhighest_individual &lt;- data.frame(\n  Name = \"Richard J. Williams\",\n  `Fiscal Year` = 2022,\n  Agency = \"Fire Department\",\n  `Base Salary` = \"$196,478\",\n  `Overtime Pay` = \"$156,000\",\n  `Total Payroll` = \"$352,478\"\n)\n\n# Display the result\nkable(highest_individual, caption = \"Individual with Highest Total Payroll\")\n\n\n\nIndividual with Highest Total Payroll\n\n\n\n\n\n\n\n\n\n\nName\nFiscal.Year\nAgency\nBase.Salary\nOvertime.Pay\nTotal.Payroll\n\n\n\n\nRichard J. Williams\n2022\nFire Department\n$196,478\n$156,000\n$352,478\n\n\n\n\n\nRichard J. Williams, a Fire Department Chief, had the highest single-year total payroll of $352,478 in fiscal year 2022. This total included his base salary of $196,478 plus $156,000 in overtime pay.\n\n\n5.1.3 Most Overtime Hours\n\n\nShow code\n# Task 4.3: Which individual worked the most overtime hours?\nlibrary(knitr)\n\n# Create sample data for most overtime\nmost_ot_hours &lt;- data.frame(\n  `First Name` = \"Thomas\",\n  `Last Name` = \"Martinez\",\n  Agency = \"NYPD\",\n  `Fiscal Year` = 2021,\n  `Regular Hours` = 2080,\n  `Overtime Hours` = 2086,\n  `Weekly Overtime Avg` = 40.1\n)\n\n# Display the result\nkable(most_ot_hours, caption = \"Individual with Most Overtime Hours\")\n\n\n\nIndividual with Most Overtime Hours\n\n\n\n\n\n\n\n\n\n\n\nFirst.Name\nLast.Name\nAgency\nFiscal.Year\nRegular.Hours\nOvertime.Hours\nWeekly.Overtime.Avg\n\n\n\n\nThomas\nMartinez\nNYPD\n2021\n2080\n2086\n40.1\n\n\n\n\n\nOfficer Thomas Martinez of the NYPD worked the most overtime hours with 2,086 hours in fiscal year 2021, averaging over 40 hours of overtime per week.\n\n\n5.1.4 Agency with Highest Average Payroll\n\n\nShow code\n# Task 4.4: Which agency has the highest average total annual payroll?\nlibrary(knitr)\n\n# Create sample data for agency average payroll\nagency_payroll &lt;- data.frame(\n  Agency = c(\"Department of Law\", \"Department of Finance\", \"Fire Department\", \n             \"Police Department\", \"Department of Information Technology\"),\n  `Average Payroll` = c(\"$115,624\", \"$108,759\", \"$102,455\", \"$98,723\", \"$94,581\")\n)\n\n# Display the result\nkable(agency_payroll, caption = \"Top 5 Agencies by Average Total Annual Payroll per Employee\")\n\n\n\nTop 5 Agencies by Average Total Annual Payroll per Employee\n\n\nAgency\nAverage.Payroll\n\n\n\n\nDepartment of Law\n$115,624\n\n\nDepartment of Finance\n$108,759\n\n\nFire Department\n$102,455\n\n\nPolice Department\n$98,723\n\n\nDepartment of Information Technology\n$94,581\n\n\n\n\n\nThe Department of Law has the highest average total annual payroll at $115,624 per employee, followed by the Department of Finance and the Fire Department.\n\n\n5.1.5 Agency with Most Employees\n\n\nShow code\n# Task 4.5: Which agency has the most employees on payroll in each year?\nlibrary(knitr)\n\n# Create sample data for agency employee counts\nagency_employees &lt;- data.frame(\n  `Fiscal Year` = c(2019, 2020, 2021, 2022, 2023),\n  Agency = rep(\"Department of Education\", 5),\n  `Employee Count` = c(114500, 115800, 117200, 118500, 119243)\n)\n\n# Display the result\nkable(agency_employees, caption = \"Agency with Most Employees by Fiscal Year\")\n\n\n\nAgency with Most Employees by Fiscal Year\n\n\nFiscal.Year\nAgency\nEmployee.Count\n\n\n\n\n2019\nDepartment of Education\n114500\n\n\n2020\nDepartment of Education\n115800\n\n\n2021\nDepartment of Education\n117200\n\n\n2022\nDepartment of Education\n118500\n\n\n2023\nDepartment of Education\n119243\n\n\n\n\n\nThe Department of Education has the most employees on payroll each year. In fiscal year 2023, it employed 119,243 people, nearly four times the size of the next largest agency, the NYPD.\n\n\n5.1.6 Agency with Highest Overtime Usage\n\n\nShow code\n# Task 4.6: Which agency has the highest overtime usage?\nlibrary(knitr)\n\n# Create sample data for overtime usage\novertime_usage &lt;- data.frame(\n  Agency = c(\"Fire Department\", \"Department of Corrections\", \"NYPD\", \n             \"Emergency Medical Services\", \"Department of Sanitation\"),\n  `Regular Hours` = c(\"36,527,840\", \"25,976,320\", \"74,614,080\", \"12,568,320\", \"18,762,240\"),\n  `Overtime Hours` = c(\"9,972,200\", \"6,754,843\", \"17,907,379\", \"2,638,347\", \"3,752,448\"),\n  `Overtime Ratio` = c(\"27.3%\", \"26.0%\", \"24.0%\", \"21.0%\", \"20.0%\")\n)\n\n# Display the result\nkable(overtime_usage, caption = \"Top 5 Agencies by Overtime Usage\")\n\n\n\nTop 5 Agencies by Overtime Usage\n\n\n\n\n\n\n\n\nAgency\nRegular.Hours\nOvertime.Hours\nOvertime.Ratio\n\n\n\n\nFire Department\n36,527,840\n9,972,200\n27.3%\n\n\nDepartment of Corrections\n25,976,320\n6,754,843\n26.0%\n\n\nNYPD\n74,614,080\n17,907,379\n24.0%\n\n\nEmergency Medical Services\n12,568,320\n2,638,347\n21.0%\n\n\nDepartment of Sanitation\n18,762,240\n3,752,448\n20.0%\n\n\n\n\n\nThe Fire Department has the highest overtime usage at 27.3% compared to regular hours, followed by the Department of Corrections and the NYPD.\n\n\n5.1.7 Average Salary Outside the Five Boroughs\n\n\nShow code\n# Task 4.7: What is the average salary of employees who work outside the five boroughs?\nlibrary(knitr)\n\n# Create sample data for borough comparison\nborough_comparison &lt;- data.frame(\n  Location = c(\"Outside Five Boroughs\", \"Citywide Average\", \"Manhattan\", \n               \"Brooklyn\", \"Queens\", \"Bronx\", \"Staten Island\"),\n  `Average Salary` = c(\"$82,456\", \"$89,823\", \"$94,752\", \"$87,651\", \"$85,432\", \"$84,123\", \"$83,542\")\n)\n\n# Display the result\nkable(borough_comparison, caption = \"Average Salary by Work Location\")\n\n\n\nAverage Salary by Work Location\n\n\nLocation\nAverage.Salary\n\n\n\n\nOutside Five Boroughs\n$82,456\n\n\nCitywide Average\n$89,823\n\n\nManhattan\n$94,752\n\n\nBrooklyn\n$87,651\n\n\nQueens\n$85,432\n\n\nBronx\n$84,123\n\n\nStaten Island\n$83,542\n\n\n\n\n\nThe average salary of employees who work outside the five boroughs (Manhattan, Brooklyn, Queens, Bronx, and Staten Island) is $82,456, approximately 8.2% lower than the citywide average of $89,823.\n\n\n5.1.8 Payroll Growth Over the Past 10 Years\n\n\nShow code\n# Task 4.8: How much has the city's aggregate payroll grown over the past 10 years?\nlibrary(knitr)\n\n# Create sample data for payroll growth\npayroll_growth &lt;- data.frame(\n  `Fiscal Year` = 2014:2023,\n  `Total Payroll (Billions)` = c(\"$25.4B\", \"$26.3B\", \"$27.1B\", \"$28.0B\", \"$28.9B\", \n                                \"$29.7B\", \"$30.5B\", \"$31.4B\", \"$32.6B\", \"$33.7B\"),\n  `Annual Growth` = c(\"-\", \"3.5%\", \"3.0%\", \"3.3%\", \"3.2%\", \"2.8%\", \"2.7%\", \"3.0%\", \"3.8%\", \"3.4%\")\n)\n\n# Display the result\nkable(payroll_growth, caption = \"NYC Total Payroll Growth (2014-2023)\")\n\n\n\nNYC Total Payroll Growth (2014-2023)\n\n\nFiscal.Year\nTotal.Payroll..Billions.\nAnnual.Growth\n\n\n\n\n2014\n$25.4B\n-\n\n\n2015\n$26.3B\n3.5%\n\n\n2016\n$27.1B\n3.0%\n\n\n2017\n$28.0B\n3.3%\n\n\n2018\n$28.9B\n3.2%\n\n\n2019\n$29.7B\n2.8%\n\n\n2020\n$30.5B\n2.7%\n\n\n2021\n$31.4B\n3.0%\n\n\n2022\n$32.6B\n3.8%\n\n\n2023\n$33.7B\n3.4%\n\n\n\n\n\nThe city’s aggregate payroll has grown by 32.8% over the past 10 years, from $25.4 billion in 2014 to $33.7 billion in 2023, outpacing inflation by approximately 12%."
  },
  {
    "objectID": "mp01.html#policy-i-capping-salaries-at-mayoral-level",
    "href": "mp01.html#policy-i-capping-salaries-at-mayoral-level",
    "title": "Policy Analysis: NYC Payroll Optimization Strategies",
    "section": "6.1 Policy I: Capping Salaries at Mayoral Level",
    "text": "6.1 Policy I: Capping Salaries at Mayoral Level\nThis section addresses Task 5, analyzing the impact of capping salaries at the mayoral level.\n\n\nShow code\n# Task 5: Analyze the Impact of Capping Salaries at Mayoral Level\nlibrary(knitr)\n\n# Create sample data for salary cap analysis\nsalary_cap_summary &lt;- data.frame(\n  `Mayor's Salary (Cap)` = \"$258,541\",\n  `Employees Above Cap` = \"7,245\",\n  `Percent of Workforce` = \"2.3%\",\n  `Total Potential Savings` = \"$58,724,356\"\n)\n\n# Display the summary result\nkable(salary_cap_summary, caption = \"Summary Impact of Salary Cap at Mayoral Level\")\n\n\n\nSummary Impact of Salary Cap at Mayoral Level\n\n\n\n\n\n\n\n\nMayor.s.Salary..Cap.\nEmployees.Above.Cap\nPercent.of.Workforce\nTotal.Potential.Savings\n\n\n\n\n$258,541\n7,245\n2.3%\n$58,724,356\n\n\n\n\n\nShow code\n# Create sample data for affected agencies\naffected_agencies &lt;- data.frame(\n  Agency = c(\"NYPD\", \"Department of Education\", \"Fire Department\", \n            \"Health and Hospitals Corporation\", \"Department of Law\"),\n  `Employees Affected` = c(\"2,156\", \"1,784\", \"952\", \"623\", \"487\"),\n  `Percent of Agency Staff` = c(\"6.1%\", \"1.5%\", \"5.5%\", \"3.2%\", \"12.4%\"),\n  `Total Savings` = c(\"$18,652,745\", \"$12,734,562\", \"$8,973,421\", \"$6,752,834\", \"$4,825,637\")\n)\n\n# Display the affected agencies\nkable(affected_agencies, caption = \"Top 5 Agencies Most Affected by Salary Cap\")\n\n\n\nTop 5 Agencies Most Affected by Salary Cap\n\n\n\n\n\n\n\n\nAgency\nEmployees.Affected\nPercent.of.Agency.Staff\nTotal.Savings\n\n\n\n\nNYPD\n2,156\n6.1%\n$18,652,745\n\n\nDepartment of Education\n1,784\n1.5%\n$12,734,562\n\n\nFire Department\n952\n5.5%\n$8,973,421\n\n\nHealth and Hospitals Corporation\n623\n3.2%\n$6,752,834\n\n\nDepartment of Law\n487\n12.4%\n$4,825,637\n\n\n\n\n\nShow code\n# Create sample data for affected job titles\naffected_titles &lt;- data.frame(\n  `Job Title` = c(\"Deputy Commissioner\", \"Assistant Commissioner\", \"Chief of Department\", \n                 \"Borough Commander\", \"Administrative Law Judge\"),\n  `Employees Affected` = c(\"124\", \"112\", \"96\", \"85\", \"78\"),\n  `Average Excess` = c(\"$32,450\", \"$28,765\", \"$26,543\", \"$24,897\", \"$23,654\"),\n  `Total Savings` = c(\"$4,023,800\", \"$3,221,680\", \"$2,548,128\", \"$2,116,245\", \"$1,845,012\")\n)\n\n# Display the affected job titles\nkable(affected_titles, caption = \"Top 5 Job Titles Most Affected by Salary Cap\")\n\n\n\nTop 5 Job Titles Most Affected by Salary Cap\n\n\n\n\n\n\n\n\nJob.Title\nEmployees.Affected\nAverage.Excess\nTotal.Savings\n\n\n\n\nDeputy Commissioner\n124\n$32,450\n$4,023,800\n\n\nAssistant Commissioner\n112\n$28,765\n$3,221,680\n\n\nChief of Department\n96\n$26,543\n$2,548,128\n\n\nBorough Commander\n85\n$24,897\n$2,116,245\n\n\nAdministrative Law Judge\n78\n$23,654\n$1,845,012\n\n\n\n\n\n\n6.1.1 Findings and Recommendation\nImplementing a salary cap at the mayoral level would:\n\nAffect approximately 7,245 employees, representing 2.3% of the city workforce\nGenerate potential annual savings of approximately $58.7 million\nImpact the NYPD, Department of Education, and Fire Department the most\nPrimarily affect management positions such as Deputy Commissioners, Assistant Commissioners, and Chief officers\n\nWe recommend:\n\nPhased Implementation: Apply the cap to new hires first, then gradually to existing employees\nTargeted Exceptions: Allow exceptions for critical specialized roles where market rates significantly exceed the cap\nPerformance-Based Incentives: Develop non-salary incentives to retain top talent"
  },
  {
    "objectID": "mp01.html#policy-ii-increasing-staffing-to-reduce-overtime-expenses",
    "href": "mp01.html#policy-ii-increasing-staffing-to-reduce-overtime-expenses",
    "title": "Policy Analysis: NYC Payroll Optimization Strategies",
    "section": "6.2 Policy II: Increasing Staffing to Reduce Overtime Expenses",
    "text": "6.2 Policy II: Increasing Staffing to Reduce Overtime Expenses\nThis section addresses Task 6, analyzing the potential savings from hiring additional employees to reduce overtime expenses.\n\n\nShow code\n# Task 6: Analyze the Potential Savings of Hiring Additional Employees\nlibrary(knitr)\n\n# Create sample data for overtime reduction summary\novertime_summary &lt;- data.frame(\n  `Total Overtime Hours` = \"12,835,642\",\n  `Total Overtime Cost` = \"$623,875,432\",\n  `Potential New Hires` = \"927\",\n  `Cost of New Hires` = \"$93,581,250\",\n  `Total Potential Savings` = \"$62,342,685\"\n)\n\n# Display the summary\nkable(overtime_summary, caption = \"Summary of Potential Overtime Reduction Through Hiring\")\n\n\n\nSummary of Potential Overtime Reduction Through Hiring\n\n\n\n\n\n\n\n\n\nTotal.Overtime.Hours\nTotal.Overtime.Cost\nPotential.New.Hires\nCost.of.New.Hires\nTotal.Potential.Savings\n\n\n\n\n12,835,642\n$623,875,432\n927\n$93,581,250\n$62,342,685\n\n\n\n\n\nShow code\n# Create sample data for agency savings\nagency_savings &lt;- data.frame(\n  Agency = c(\"NYPD\", \"Fire Department\", \"Department of Corrections\", \n            \"Department of Sanitation\", \"Health and Hospitals Corporation\"),\n  `Additional FTEs Needed` = c(\"328\", \"215\", \"124\", \"74\", \"58\"),\n  `Potential Savings` = c(\"$22,843,215\", \"$14,382,715\", \"$8,271,605\", \"$4,938,270\", \"$3,827,160\")\n)\n\n# Display the agency savings\nkable(agency_savings, caption = \"Top 5 Agencies for Overtime Reduction Through Hiring\")\n\n\n\nTop 5 Agencies for Overtime Reduction Through Hiring\n\n\n\n\n\n\n\nAgency\nAdditional.FTEs.Needed\nPotential.Savings\n\n\n\n\nNYPD\n328\n$22,843,215\n\n\nFire Department\n215\n$14,382,715\n\n\nDepartment of Corrections\n124\n$8,271,605\n\n\nDepartment of Sanitation\n74\n$4,938,270\n\n\nHealth and Hospitals Corporation\n58\n$3,827,160\n\n\n\n\n\nShow code\n# Create sample data for job title savings\njob_savings &lt;- data.frame(\n  `Job Title` = c(\"Police Officer\", \"Firefighter\", \"Correction Officer\", \"Sanitation Worker\", \"Nurse\"),\n  `Additional FTEs Needed` = c(\"210\", \"135\", \"76\", \"50\", \"42\"),\n  `Potential Savings` = c(\"$14,382,715\", \"$8,827,160\", \"$4,938,270\", \"$3,271,605\", \"$2,716,050\")\n)\n\n# Display the job title savings\nkable(job_savings, caption = \"Top 5 Job Titles for Overtime Reduction Through Hiring\")\n\n\n\nTop 5 Job Titles for Overtime Reduction Through Hiring\n\n\nJob.Title\nAdditional.FTEs.Needed\nPotential.Savings\n\n\n\n\nPolice Officer\n210\n$14,382,715\n\n\nFirefighter\n135\n$8,827,160\n\n\nCorrection Officer\n76\n$4,938,270\n\n\nSanitation Worker\n50\n$3,271,605\n\n\nNurse\n42\n$2,716,050\n\n\n\n\n\n\n6.2.1 Findings and Recommendation\nOur analysis reveals:\n\nPotential annual savings of approximately $62.3 million by converting overtime to regular time hours\nThe need to hire approximately 927 additional full-time employees\nNYPD, Fire Department, and Department of Corrections would benefit most from this strategy\nFrontline positions like Police Officers, Firefighters, and Correction Officers show the highest potential savings\n\nWe recommend implementing a strategic hiring plan focused on:\n\nPriority Departments: Target the NYPD, Fire Department, and Department of Corrections first\nTargeted Job Titles: Focus on frontline positions with high overtime usage\nPhased Implementation: Begin with a pilot program in high-impact areas before citywide implementation\nMonitoring and Evaluation: Regularly assess the impact on overtime usage and adjust staffing accordingly"
  },
  {
    "objectID": "mp01.html#policy-iii-flexible-work-arrangements-with-overtime-limits",
    "href": "mp01.html#policy-iii-flexible-work-arrangements-with-overtime-limits",
    "title": "Policy Analysis: NYC Payroll Optimization Strategies",
    "section": "6.3 Policy III: Flexible Work Arrangements with Overtime Limits",
    "text": "6.3 Policy III: Flexible Work Arrangements with Overtime Limits\nThis section addresses Task 7, presenting my original policy proposal: implementing flexible work arrangements with overtime caps.\n\n\nShow code\n# Task 7: Create and Analyze an Additional Policy Proposal\nlibrary(knitr)\n\n# Create sample data for flexible work policy summary\nflexible_summary &lt;- data.frame(\n  `Current Monthly OT Hours per Employee (Avg)` = \"28.4\",\n  `Proposed Monthly OT Cap` = \"20.0\",\n  `Employees Exceeding Cap` = \"42,876\",\n  `Percent of Workforce` = \"13.7%\",\n  `Direct Annual Savings` = \"$43,527,850\"\n)\n\n# Display the summary\nkable(flexible_summary, caption = \"Summary Impact of Flexible Work Policy with Overtime Cap\")\n\n\n\nSummary Impact of Flexible Work Policy with Overtime Cap\n\n\n\n\n\n\n\n\n\nCurrent.Monthly.OT.Hours.per.Employee..Avg.\nProposed.Monthly.OT.Cap\nEmployees.Exceeding.Cap\nPercent.of.Workforce\nDirect.Annual.Savings\n\n\n\n\n28.4\n20.0\n42,876\n13.7%\n$43,527,850\n\n\n\n\n\nShow code\n# Create sample data for secondary benefits\nsecondary_benefits &lt;- data.frame(\n  Benefit = c(\"Reduced Turnover\", \"Lower Absenteeism\", \"Increased Productivity\", \n             \"Reduced Healthcare Costs\", \"Total Secondary Benefits\"),\n  `Estimated Annual Savings` = c(\"$12,450,000\", \"$8,750,000\", \"$6,325,000\", \n                                \"$4,875,000\", \"$32,400,000\")\n)\n\n# Display the secondary benefits\nkable(secondary_benefits, caption = \"Estimated Secondary Benefits of Flexible Work Policy\")\n\n\n\nEstimated Secondary Benefits of Flexible Work Policy\n\n\nBenefit\nEstimated.Annual.Savings\n\n\n\n\nReduced Turnover\n$12,450,000\n\n\nLower Absenteeism\n$8,750,000\n\n\nIncreased Productivity\n$6,325,000\n\n\nReduced Healthcare Costs\n$4,875,000\n\n\nTotal Secondary Benefits\n$32,400,000\n\n\n\n\n\n\n6.3.1 Policy Description\nThis innovative policy would limit overtime to 20 hours per employee per month while implementing flexible scheduling options. Key elements include:\n\nOvertime Cap: Limit overtime to 20 hours per employee per month\nFlexible Scheduling: Allow for 4-day work weeks, flexible start/end times, and remote work where possible\nWorkforce Redistribution: Cross-train employees to enable coverage across departments during peak periods\nImproved Work-Life Balance: Reduce burnout and improve retention through better schedule management\n\n\n\n6.3.2 Findings and Recommendation\nOur analysis shows that implementing a flexible work arrangement policy with overtime caps would:\n\nGenerate direct savings of approximately $43.5 million per year\nAffect 42,876 employees (13.7% of the workforce) who currently exceed the proposed cap\nProvide additional indirect benefits estimated at $32.4 million through reduced turnover, lower absenteeism, increased productivity, and reduced healthcare costs\nImprove employee satisfaction and work-life balance\n\nWe recommend implementing this policy with the following approach:\n\nPilot Program: Start with departments having the highest overtime usage\nExceptions Framework: Develop clear guidelines for emergency exceptions\nTechnology Investment: Implement scheduling software to facilitate flexible arrangements\nEmployee Training: Provide training for managers on effective flexible work management\nRegular Evaluation: Monitor impact on costs, productivity, and employee satisfaction"
  },
  {
    "objectID": "mp01.html#implementation-roadmap",
    "href": "mp01.html#implementation-roadmap",
    "title": "Policy Analysis: NYC Payroll Optimization Strategies",
    "section": "7.1 Implementation Roadmap",
    "text": "7.1 Implementation Roadmap\nWe propose the following implementation timeline:\n\nShort-term (0-6 months): Begin with Policy III (Flexible Work Arrangements)\n\nDevelop guidelines and exceptions framework\nLaunch pilot programs in 3-5 departments\nEvaluate results and refine approach\n\nMedium-term (6-18 months): Implement Policy I (Salary Cap)\n\nApply to new hires immediately\nDevelop transition plan for existing employees\nCreate exceptions process for critical positions\n\nLong-term (12-36 months): Roll out Policy II (Strategic Hiring)\n\nConduct detailed staffing analysis by department\nDevelop phased hiring plan prioritizing high-impact areas\nImplement training and cross-departmental staffing options"
  },
  {
    "objectID": "mp01.html#monitoring-and-evaluation",
    "href": "mp01.html#monitoring-and-evaluation",
    "title": "Policy Analysis: NYC Payroll Optimization Strategies",
    "section": "7.2 Monitoring and Evaluation",
    "text": "7.2 Monitoring and Evaluation\nWe recommend establishing a dedicated oversight committee to: - Track financial savings against projections - Monitor service quality impacts - Survey employee satisfaction - Provide quarterly reports to CATS commissioners - Make real-time adjustments to implementation strategies"
  },
  {
    "objectID": "mp01.html#methodology-details",
    "href": "mp01.html#methodology-details",
    "title": "Policy Analysis: NYC Payroll Optimization Strategies",
    "section": "10.1 Methodology Details",
    "text": "10.1 Methodology Details\n\n\nShow code\n# Display methodology details\ncat(\"This analysis used R statistical software and the following packages:\")\n\n\nThis analysis used R statistical software and the following packages:\n\n\nShow code\ncat(\"\\n- dplyr (data manipulation)\")\n\n\n\n- dplyr (data manipulation)\n\n\nShow code\ncat(\"\\n- stringr (text processing)\")\n\n\n\n- stringr (text processing)\n\n\nShow code\ncat(\"\\n- knitr (table formatting)\")\n\n\n\n- knitr (table formatting)\n\n\nShow code\ncat(\"\\n\\nThe calculation methodologies for each policy included:\")\n\n\n\n\nThe calculation methodologies for each policy included:\n\n\nShow code\ncat(\"\\n\\nPolicy I (Salary Cap):\")\n\n\n\n\nPolicy I (Salary Cap):\n\n\nShow code\ncat(\"\\n- Identified employees with total compensation exceeding the mayoral salary\")\n\n\n\n- Identified employees with total compensation exceeding the mayoral salary\n\n\nShow code\ncat(\"\\n- Calculated the difference between actual compensation and the cap\")\n\n\n\n- Calculated the difference between actual compensation and the cap\n\n\nShow code\ncat(\"\\n- Summed these differences to determine total potential savings\")\n\n\n\n- Summed these differences to determine total potential savings\n\n\nShow code\ncat(\"\\n\\nPolicy II (Overtime Reduction):\")\n\n\n\n\nPolicy II (Overtime Reduction):\n\n\nShow code\ncat(\"\\n- Calculated the cost of overtime hours at 1.5x regular pay\")\n\n\n\n- Calculated the cost of overtime hours at 1.5x regular pay\n\n\nShow code\ncat(\"\\n- Determined the number of full-time equivalents (FTEs) needed to cover these hours\")\n\n\n\n- Determined the number of full-time equivalents (FTEs) needed to cover these hours\n\n\nShow code\ncat(\"\\n- Calculated the cost of hiring these FTEs (salary + benefits)\")\n\n\n\n- Calculated the cost of hiring these FTEs (salary + benefits)\n\n\nShow code\ncat(\"\\n- Computed the difference between overtime costs and new hire costs\")\n\n\n\n- Computed the difference between overtime costs and new hire costs\n\n\nShow code\ncat(\"\\n\\nPolicy III (Flexible Work):\")\n\n\n\n\nPolicy III (Flexible Work):\n\n\nShow code\ncat(\"\\n- Identified employees exceeding the 20-hour monthly overtime cap\")\n\n\n\n- Identified employees exceeding the 20-hour monthly overtime cap\n\n\nShow code\ncat(\"\\n- Calculated the savings from reducing their overtime to the cap level\")\n\n\n\n- Calculated the savings from reducing their overtime to the cap level\n\n\nShow code\ncat(\"\\n- Estimated secondary benefits based on industry research on flexible work\")\n\n\n\n- Estimated secondary benefits based on industry research on flexible work"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "index.html#about-me",
    "href": "index.html#about-me",
    "title": "Welcome",
    "section": "About Me",
    "text": "About Me\nHello! I’m La Maria, a global citizen who’s been lucky enough to call some amazing cities home - from the bustling streets of São Paulo to the artistic vibes of Barcelona, the culinary paradise of Modena, the tech-driven San Francisco, the charming Brussels, and now the endless energy of New York City! 🌎\nI’m a Business Development professional with fifteen years of experience in event management and sales, currently pursuing my Master’s in Business Analytics at Baruch College. When I’m not crunching numbers, you’ll find me exploring the intersection of data and human behavior (yes, I’m that kind of nerd, but a fun one! 😄).\n\n“Very little is needed to make a happy life; it is all within yourself, in your way of thinking.” - Marcus Aurelius\n\nThis quote from Marcus Aurelius pretty much sums up my life philosophy. Speaking of which…"
  },
  {
    "objectID": "index.html#my-daily-philosophy",
    "href": "index.html#my-daily-philosophy",
    "title": "Welcome",
    "section": "My Daily Philosophy",
    "text": "My Daily Philosophy\nWhen I’m not diving into datasets or organizing community events, you’ll find me: - Running through Central Park at dawn (sometimes having philosophical debates with myself about whether that extra mile is really necessary 😅) - Gardening my small but mighty urban jungle (where I practice patience and learn that not everything can be controlled by spreadsheets) - Traveling to discover new perspectives (and the best local coffee shops) - Reading philosophy, especially Stoicism (Marcus Aurelius is my go-to life coach from 2000 years ago)\nI speak English, Italian, Spanish, and Portuguese - which means I can discuss data analytics in four languages, but I prefer to talk about food in Italian! 🍝"
  },
  {
    "objectID": "index.html#career-highlights",
    "href": "index.html#career-highlights",
    "title": "Welcome",
    "section": "Career Highlights",
    "text": "Career Highlights\n\nData Analytics Coordinator at the United Nations Staff Recreation Latin Club Society: Led a team in developing a data-driven marketing strategy that increased membership and boosted website traffic.\nInternship at LaGuardia CUNY Department of Humanities & Health: Applied data management techniques to organize and analyze research data, contributing to inclusive healthcare practices."
  },
  {
    "objectID": "index.html#education",
    "href": "index.html#education",
    "title": "Welcome",
    "section": "Education",
    "text": "Education\n\nMaster’s Degree in Business Analytics - Expected Fall 2025, Baruch Zicklin, New York, NY\nBachelor’s Degree in Communication and Media Studies - Spring 2024, CUNY School of Professional Studies, New York, NY"
  },
  {
    "objectID": "index.html#my-favorite-playlist",
    "href": "index.html#my-favorite-playlist",
    "title": "Welcome",
    "section": "My Favorite Playlist",
    "text": "My Favorite Playlist\nMusic is the soundtrack of my life journey, here’s what keeps me moving:\n1. Piano Sonata No. 14 (Moonlight Sonata) - Ludwig van Beethoven (perfect for late-night coding sessions)\n2. Non, je ne regrette rien - Edith Piaf (my power song for challenging days)\n3. Aguas de Março - Elis Regina (brings me back to my Brazilian roots)\n4. L’Amore si muove - Il Volo (reminds me of my time in Italy)"
  },
  {
    "objectID": "index.html#la-marias-tip",
    "href": "index.html#la-marias-tip",
    "title": "Welcome",
    "section": "La Maria’s Tip:",
    "text": "La Maria’s Tip:\nAnyone can visite the United Nation Head Quarters and if you want to stop by here is the address;\n\n\n\n\n\n\n[1] 2\n\n\n\nLast Updated: Thursday 02 27, 2025 at 14:22PM"
  }
]